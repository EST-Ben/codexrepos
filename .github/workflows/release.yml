name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    name: Build & deploy API + web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install server dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build API image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/api:${{ github.ref_name }}
          docker build -t "$IMAGE" .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Push API image
        run: docker push "$IMAGE"
        env:
          IMAGE: ${{ env.IMAGE }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Expo dependencies
        run: npm install
        working-directory: app

      - name: Export web bundle
        run: npx expo export --platform web --output-dir ../dist/web
        working-directory: app

      - name: Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: expo-web
          path: dist/web

      - name: Configure AWS credentials
        if: ${{ secrets.AWS_ACCESS_KEY_ID && secrets.AWS_SECRET_ACCESS_KEY && secrets.AWS_REGION && secrets.AWS_S3_BUCKET }}
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync web bundle to S3
        if: ${{ secrets.AWS_ACCESS_KEY_ID && secrets.AWS_SECRET_ACCESS_KEY && secrets.AWS_REGION && secrets.AWS_S3_BUCKET }}
        run: aws s3 sync dist/web s3://${{ secrets.AWS_S3_BUCKET }} --delete

      - name: Create CloudFront invalidation
        if: ${{ secrets.AWS_ACCESS_KEY_ID && secrets.AWS_SECRET_ACCESS_KEY && secrets.AWS_REGION && secrets.AWS_S3_BUCKET && secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }} \
            --paths "/*"

      - name: Trigger EAS build (Android)
        if: ${{ secrets.EAS_TOKEN }}
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: npx eas build --platform android --profile production --non-interactive
        working-directory: app

      - name: Trigger EAS build (iOS)
        if: ${{ secrets.EAS_TOKEN }}
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: npx eas build --platform ios --profile production --non-interactive
        working-directory: app
